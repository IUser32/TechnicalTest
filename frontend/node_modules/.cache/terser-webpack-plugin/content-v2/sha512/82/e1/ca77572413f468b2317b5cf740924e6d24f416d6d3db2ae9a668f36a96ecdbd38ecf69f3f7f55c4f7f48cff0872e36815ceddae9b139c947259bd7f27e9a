{"map":"{\"version\":3,\"sources\":[\"/Users/lfortuna/Desktop/test/frontend/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/lfortuna/Desktop/test/frontend/src/logo.svg\",\"/Users/lfortuna/Desktop/test/frontend/src/Menu.js\",\"/Users/lfortuna/Desktop/test/frontend/src/App.js\",\"/Users/lfortuna/Desktop/test/frontend/src/serviceWorker.js\",\"/Users/lfortuna/Desktop/test/frontend/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"Component\",\"RouteLink\",\"_ref\",\"label\",\"to\",\"activeOnlyWhenExact\",\"react_default\",\"a\",\"createElement\",\"Route\",\"path\",\"exact\",\"children\",\"_ref2\",\"match\",\"Link\",\"Home\",\"About\",\"App\",\"BrowserRouter\",\"className\",\"href\",\"App_RouteLink\",\"component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8LCGrBC,EAAAA,iCCIbC,EAAY,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,GAAIC,EAAdH,EAAcG,oBAAd,OAChBC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,KAAMN,EACNO,MAAON,EACPO,SAAU,SAAAC,GAAAA,EAAGC,MAAH,OACRR,EAAAC,EAAAC,cAAA,KAAA,KACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMX,GAAIA,GAAKD,QAMjBa,EAAO,WAAA,OACXV,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,KAAA,UAIES,EAAQ,WAAA,OACZX,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,KAAA,WA6BWU,mLAxBX,OACEZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAAA,MAAA,CAAKY,UAAU,yBACbd,EAAAC,EAAAC,cAAA,MAAA,CAAKY,UAAU,mBACbd,EAAAC,EAAAC,cAAA,MAAA,CAAKY,UAAU,iBACXd,EAAAC,EAAAC,cAAA,IAAA,CAAGY,UAAU,eAAeC,KAAK,KAAjC,cAEJf,EAAAC,EAAAC,cAAA,KAAA,CAAIY,UAAU,kBACZd,EAAAC,EAAAC,cAACc,EAAD,CAAWjB,qBAAqB,EAAMD,GAAG,IAAID,MAAM,SACnDG,EAAAC,EAAAC,cAACc,EAAD,CAAWlB,GAAG,SAASD,MAAM,WAG/BG,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOE,OAAK,EAACD,KAAK,IAAIa,UAAWP,IACjCV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,KAAK,SAASa,UAAWN,eAhB5BjB,EAAAA,WClBEwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASb,MACvB,2DCZNc,EAAAA,EAASC,OAAOvB,EAAAC,EAAAC,cAACsB,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React, { Component } from 'react';\\nimport { BrowserRouter as Router, Route, Link } from \\\"react-router-dom\\\";\\n\\nclass Menu extends Component {\\n  render() {\\n    return (\\n        <nav className=\\\"navbar navbar-inverse\\\">\\n            <div className=\\\"container-fluid\\\">\\n                <div className=\\\"navbar-header\\\">\\n                    <a className=\\\"navbar-brand\\\" href=\\\"#\\\">RentMovie</a>\\n                </div>\\n                <ul className=\\\"nav navbar-nav\\\">\\n                    <li className=\\\"active\\\"><a href=\\\"{% url 'index' %}\\\">Home</a></li>\\n                    <li><a href=\\\"/rent\\\">Rent</a></li>\\n                    <li><a href=\\\"#\\\">Return</a></li>\\n                </ul>\\n            </div>\\n        </nav>\\n    );\\n  }\\n}\\n\\nexport default Menu;\\n\",\"import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\nimport Menu from './Menu'\\nimport { BrowserRouter as Router, Route, Link } from \\\"react-router-dom\\\";\\n\\n\\nconst RouteLink = ({ label, to, activeOnlyWhenExact }) => (\\n  <Route\\n    path={to}\\n    exact={activeOnlyWhenExact}\\n    children={({ match }) => (\\n      <li>\\n        <Link to={to}>{label}</Link>\\n      </li>\\n    )}\\n  />\\n);\\n\\nconst Home = () => (\\n  <div>\\n    <h2>Home</h2>\\n  </div>\\n);\\n\\nconst About = () => (\\n  <div>\\n    <h2>About</h2>\\n  </div>\\n);\\nclass App extends Component {\\n  render() {\\n    return (\\n      <Router>\\n        <nav className=\\\"navbar navbar-inverse\\\">\\n          <div className=\\\"container-fluid\\\">\\n            <div className=\\\"navbar-header\\\">\\n                <a className=\\\"navbar-brand\\\" href=\\\"#\\\">RentMovie</a>\\n            </div>\\n            <ul className=\\\"nav navbar-nav\\\">\\n              <RouteLink activeOnlyWhenExact={true} to=\\\"/\\\" label=\\\"Home\\\" />\\n              <RouteLink to=\\\"/about\\\" label=\\\"About\\\" />\\n              \\n            </ul>\\n            <div>\\n              <Route exact path=\\\"/\\\" component={Home} />\\n              <Route path=\\\"/about\\\" component={About} />\\n            </div>\\n          </div>\\n        </nav>\\n        \\n      </Router>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(e,a,t){e.exports=t(28)},20:function(e,a,t){},22:function(e,a,t){e.exports=t.p+\"static/media/logo.5d5d9eef.svg\"},23:function(e,a,t){},28:function(e,a,t){\"use strict\";t.r(a);var n=t(0),r=t.n(n),c=t(12),o=t.n(c),l=(t(20),t(5)),i=t(6),u=t(9),m=t(7),s=t(10),v=(t(22),t(23),n.Component,t(31)),d=t(29),E=t(30),h=function(e){var a=e.label,t=e.to,n=e.activeOnlyWhenExact;return r.a.createElement(v.a,{path:t,exact:n,children:function(e){e.match;return r.a.createElement(\"li\",null,r.a.createElement(d.a,{to:t},a))}})},b=function(){return r.a.createElement(\"div\",null,r.a.createElement(\"h2\",null,\"Home\"))},p=function(){return r.a.createElement(\"div\",null,r.a.createElement(\"h2\",null,\"About\"))},f=function(e){function a(){return Object(l.a)(this,a),Object(u.a)(this,Object(m.a)(a).apply(this,arguments))}return Object(s.a)(a,e),Object(i.a)(a,[{key:\"render\",value:function(){return r.a.createElement(E.a,null,r.a.createElement(\"nav\",{className:\"navbar navbar-inverse\"},r.a.createElement(\"div\",{className:\"container-fluid\"},r.a.createElement(\"div\",{className:\"navbar-header\"},r.a.createElement(\"a\",{className:\"navbar-brand\",href:\"#\"},\"RentMovie\")),r.a.createElement(\"ul\",{className:\"nav navbar-nav\"},r.a.createElement(h,{activeOnlyWhenExact:!0,to:\"/\",label:\"Home\"}),r.a.createElement(h,{to:\"/about\",label:\"About\"})),r.a.createElement(\"div\",null,r.a.createElement(v.a,{exact:!0,path:\"/\",component:b}),r.a.createElement(v.a,{path:\"/about\",component:p})))))}}]),a}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(f,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[15,2,1]]]);","extractedComments":[]}